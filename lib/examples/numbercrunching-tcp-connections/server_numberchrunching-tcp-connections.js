// Generated by CoffeeScript 1.6.3
(function() {
  var calculations, libTcp, measures, prettyNum, server, verkehr;

  verkehr = require("../../");

  libTcp = require("net");

  server = libTcp.createServer();

  server.listen(9999);

  calculations = 0;

  measures = new verkehr.Measures();

  measures.addMeasure("clients", function(cb) {
    return server.getConnections(cb);
  });

  measures.addMeasure("calculations", function(cb) {
    return cb(null, calculations);
  });

  measures.start();

  prettyNum = function(num) {
    if (num < 10) {
      return "0000000" + num;
    }
    if (num < 100) {
      return "000000" + num;
    }
    if (num < 1000) {
      return "00000" + num;
    }
    if (num < 10000) {
      return "0000" + num;
    }
    if (num < 100000) {
      return "000" + num;
    }
    if (num < 1000000) {
      return "00" + num;
    }
    if (num < 10000000) {
      return "0" + num;
    }
    return "" + num;
  };

  server.on("connection", function(socket) {
    var pointer, request;
    request = new Buffer(8);
    pointer = 0;
    return socket.on("data", function(chunk) {
      var b, num1, num2, s, sum, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = chunk.length; _i < _len; _i++) {
        b = chunk[_i];
        request[pointer] = b;
        pointer++;
        if (pointer === 8) {
          pointer = 0;
          s = request.toString();
          num1 = parseInt(s.slice(0, 4));
          num2 = parseInt(s.slice(4));
          sum = num1 + num2;
          calculations++;
          _results.push(socket.write(prettyNum(sum)));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    });
  });

}).call(this);
